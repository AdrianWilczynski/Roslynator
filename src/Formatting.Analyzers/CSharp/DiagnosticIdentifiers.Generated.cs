// Copyright (c) Josef Pihrt. All rights reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;

namespace Roslynator.Formatting.CSharp
{
    public static partial class DiagnosticIdentifiers
    {
        public const string RemoveNewLinesFromAccessorListOfAutoProperty = "RCS0001";
        public const string AddNewLineBeforeAccessorOfFullProperty = "RCS0002";
        public const string RemoveNewLinesFromAccessor = "RCS0003";
        public const string PlaceBinaryOperatorAfterOperand = "RCS0004";
        public const string PlaceConditionalOperatorAfterExpression = "RCS0005";
        public const string AddEmptyLineAfterRegion = "RCS0006";
        public const string AddEmptyLineBeforeEndRegion = "RCS0007";
        public const string RemoveNewLineBetweenIfKeywordAndElseKeyword = "RCS0008";
        public const string RemoveNewLineBeforeWhileKeywordOfDoStatement = "RCS0009";
        public const string AddEmptyLineBetweenSwitchSections = "RCS0010";
        public const string PlaceExpressionBodyArrowAtEndOfLine = "RCS0011";
        public const string PlaceExpressionBodyArrowBeforeExpression = "RCS0012";
        public const string AddNewLineBeforeTypeParameterConstraint = "RCS0013";
        public const string AddNewLineBeforeConstructorInitializer = "RCS0014";
        public const string AddEmptyLineBetweenSinglelineDeclarations = "RCS0015";
        public const string AddEmptyLineBetweenDeclarationAndDocumentationComment = "RCS0016";
        public const string AddEmptyLineBetweenSinglelineDeclarationsOfDifferentKind = "RCS0017";
        public const string RemoveEmptyLineBetweenSinglelineDeclarationsOfSameKind = "RCS0018";
        public const string AddNewLineAfterAttributeList = "RCS0019";
        public const string AddEmptyLineBeforeUsingDirectiveList = "RCS0020";
        public const string AddEmptyLineAfterUsingDirectiveList = "RCS0021";
        public const string AddNewLineBeforeClosingBraceOfEmptyBlock = "RCS0023";
        public const string AddNewLineBeforeEnumMember = "RCS0025";
        public const string AddNewLineBeforeStatement = "RCS0026";
        public const string AddNewLineBeforeEmbeddedStatement = "RCS0027";
        public const string AddNewLineAfterSwitchLabel = "RCS0028";
        public const string PlaceBinaryOperatorBeforeOperand = "RCS0029";
        public const string AddEmptyLineAfterEmbeddedStatement = "RCS0030";
        public const string AddEmptyLineBetweenDeclarations = "RCS0057";
        public const string AddNewLineBeforeClosingBraceOfTypeDeclaration = "RCS0076";
        public const string UseLinefeedAsNewLine = "RCS0086";
        public const string UseCarriageReturnAndLinefeedAsNewLine = "RCS0087";
        public const string UseSpacesInsteadOfTab = "RCS0088";
        public const string AddEmptyLineBeforeClosingBraceOfDoStatement = "RCS0092";
        public const string AddEmptyLineBetweenBlockAndStatement = "RCS0153";
        public const string PlaceConditionalOperatorBeforeExpression = "RCS0184";
        public const string AddNewLineBeforeClosingBraceOfBlock = "RCS0185";
    }
}